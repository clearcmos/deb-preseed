# ======================================================================
# Debian 12 Automated Preseed — fully non‑interactive
# ======================================================================

### General debconf priority & frontend
d-i debconf/priority              string  critical
d-i debconf/frontend              string  noninteractive

### Locale & keyboard
d-i debian-installer/locale       string  en_US.UTF-8
d-i console-setup/ask_detect      boolean false
d-i keyboard-configuration/xkb-keymap select us

### Networking (Static Configuration)
d-i netcfg/enable                 boolean true
d-i netcfg/choose_interface       select  auto
d-i netcfg/disable_dhcp           boolean true
d-i netcfg/disable_autoconfig     boolean true

# Static IP configuration
d-i netcfg/get_ipaddress          string  ${network_ip}
d-i netcfg/get_netmask            string  ${network_netmask}
d-i netcfg/get_gateway            string  ${network_gateway}
d-i netcfg/get_nameservers        string  ${network_dns}
d-i netcfg/confirm_static         boolean true

# Hostname and domain
d-i netcfg/get_hostname           string  ${network_hostname}
d-i netcfg/get_domain             string  ${network_domain}
d-i netcfg/hostname               string  ${network_hostname}

### Mirror settings
d-i mirror/country                string   manual
d-i mirror/http/hostname          string   deb.debian.org
d-i mirror/http/directory         string   /debian
d-i mirror/http/proxy             string

### Clock & timezone
d-i clock-setup/utc               boolean  true
d-i clock-setup/ntp               boolean  true
d-i clock-setup/ntp-server        string   ca.pool.ntp.org
d-i time/zone                     string   America/Toronto

### ----------------------------------------------------------------------------
### Disk partitioning — wipe & use entire first non‑removable disk (atomic)
### ----------------------------------------------------------------------------
# automatically pick the first non‑removable disk
d-i partman/early_command         string  \
  DISK=$(lsblk -dpno NAME,RM | awk '$2=="0"{print $1;exit}'); \
  debconf-set partman-auto/disk "$DISK"

# fully automated LVM-based ("atomic") scheme
d-i partman-auto/method           string  regular
d-i partman-auto/choose_recipe    select  atomic
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition      select  finish
d-i partman/confirm               boolean  true
d-i partman/confirm_nooverwrite   boolean  true
d-i partman-md/confirm            boolean  true

### Package selection
tasksel tasksel/first             multiselect ssh-server
d-i tasksel/skip-tasks            string   standard
d-i pkgsel/include                string   ${packages}
d-i pkgsel/upgrade                select   full-upgrade
popularity-contest popularity-contest/participate boolean false

### User & passwords
d-i passwd/root-login             boolean  true
d-i passwd/root-password          password ${rootpassword}
d-i passwd/root-password-again    password ${rootpassword}

d-i passwd/user-fullname          string   ${userfullname}
d-i passwd/username               string   ${username}
d-i passwd/user-password          password ${userpassword}
d-i passwd/user-password-again    password ${userpassword}
d-i passwd/user-default-groups    string   sudo

### Bootloader
d-i grub-installer/only_debian    boolean  true
d-i grub-installer/with_other_os  boolean  true
d-i grub-installer/bootdev        string   default

### Late command
d-i preseed/late_command string \
  in-target bash -c "git clone https://github.com/clearcmos/deb-preseed /home/${username}/deb-preseed && chown -R ${username}:${username} /home/${username}/deb-preseed" && \
  in-target bash -c "mkdir -p /root/.ssh && chmod 700 /root/.ssh" && \
  in-target bash -c "touch /root/.ssh/authorized_keys && chmod 600 /root/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_1}' >> /root/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_2}' >> /root/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_3}' >> /root/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_4}' >> /root/.ssh/authorized_keys" && \
  in-target bash -c "mkdir -p /home/${username}/.ssh && chmod 700 /home/${username}/.ssh && chown ${username}:${username} /home/${username}/.ssh" && \
  in-target bash -c "touch /home/${username}/.ssh/authorized_keys && chmod 600 /home/${username}/.ssh/authorized_keys && chown ${username}:${username} /home/${username}/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_1}' >> /home/${username}/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_2}' >> /home/${username}/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_3}' >> /home/${username}/.ssh/authorized_keys" && \
  in-target bash -c "echo '${ssh_authorized_key_4}' >> /home/${username}/.ssh/authorized_keys" && \
  in-target bash -c "chown ${username}:${username} /home/${username}/.ssh/authorized_keys" && \
  in-target bash -c "ssh-keygen -t ed25519 -f /root/.ssh/id_ed25519 -N '' -C 'root@${network_hostname}'" && \
  in-target bash -c "ssh-keygen -t ed25519 -f /home/${username}/.ssh/id_ed25519 -N '' -C '${username}@${network_hostname}' && chown ${username}:${username} /home/${username}/.ssh/id_ed25519 /home/${username}/.ssh/id_ed25519.pub" && \
  in-target bash -c "echo 'source /home/${username}/deb-preseed/common/env/aliases' >> /etc/profile" && \
  in-target bash -c "echo 'source /home/${username}/deb-preseed/common/env/functions' >> /etc/profile" && \
  in-target bash -c "echo 'source /home/${username}/deb-preseed/common/env/profile' >> /etc/profile" && \
  in-target bash -c "sed -i 's/^[[:space:]]*alias ls='\''ls --color=auto'\''/# alias ls='\''ls --color=auto'\''/g' /home/${username}/.bashrc" && \
  in-target bash -c "sed -i 's/^# set autoindent/set autoindent/g' /etc/nanorc" && \
  in-target bash -c "mkdir -p /home/${username}/deb-preseed/hosts/misc/docker-compose/traefik && touch /home/${username}/deb-preseed/hosts/misc/docker-compose/traefik/acme.json && chmod 600 /home/${username}/deb-preseed/hosts/misc/docker-compose/traefik/acme.json && chown ${username}:${username} /home/${username}/deb-preseed/hosts/misc/docker-compose/traefik/acme.json" && \
  in-target bash -c "usermod -aG docker ${username}" && \
  in-target bash -c "groupadd secrets || true" && \
  in-target bash -c "usermod -aG secrets ${username}" && \
  in-target bash -c "mkdir -p /usr/local/lib/shared-npm && chown -R ${username}:${username} /usr/local/lib/shared-npm" && \
  in-target bash -c "echo 'export PATH=/usr/local/lib/shared-npm/bin:\$PATH' > /etc/profile.d/shared-npm.sh && chmod +x /etc/profile.d/shared-npm.sh" && \
  in-target bash -c "su - ${username} -c 'npm config set prefix \"/usr/local/lib/shared-npm\"'" && \
  in-target bash -c "su - ${username} -c 'echo \"export PATH=/usr/local/lib/shared-npm/bin:\$PATH\" >> /home/${username}/.profile'" && \
  in-target bash -c "su - ${username} -c 'npm install -g @anthropic-ai/claude-code'"

### Finish up — reboot automatically
d-i debian-installer/exit/reboot  boolean  true
d-i finish-install/reboot_in_progress boolean true
d-i cdrom-detect/eject            boolean  true
